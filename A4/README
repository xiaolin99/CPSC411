CPSC411 - Assignemt 4
by Xiao Lin
00288263

NOTE: I did this assignment for M+, which is different from my A3
-----------------------------------------------------------------------------

Files:
Makefile - automake specification
m_lexor.flex - jflex specification for the scanner
m_parser.cup - java_cup specification for the parser
Node.java - a class to hold AST tree node, and contains function to print AST tree
m_lexor.java - jflex auto-generated scanner
parser.java - java_cup auto-generated parser
sym.java - java_cup auto-generated terminal table
java_cup.jar/java_cup-runtime.jar - java_cup library
run_parser.sh - a shell script wrapper to run the parser

MySymbol.java - java class for symbol
FunSymbol.java - java class for function symbol
VarSymbol.java - java class for variable symbol
Param.java - java class for function param
SymbolException.java - java class for any semantic exception
SymbolTable.java - java class for symbol table
SymbolChecker.java - contains method to check semantics from the start AST node

tests - a folder containing all the test
  MyTest1/2/3/4/5.m+ - tests I have written
  other .m+ - various tests copied from /home/411/M+ folder

-----------------------------------------------------------------------------

To Compile:
(must have jflex installed)
1. change directory to A4
2. run "make"

-----------------------------------------------------------------------------

To Run:
(must compile first)
1. change directory to A4
2. make sure to have execute permission of "run_parser.sh"
3. run
./run_parser.sh $PATH_TO_TESTFILE
(the AST tree will be printed to stdout)

-----------------------------------------------------------------------------

To Clean Up:
1. change directory to A4
2. run "make clean" to clean all .class files
3. run "make clean-all" to clean all .class files and all auto-generated .java files

-----------------------------------------------------------------------------

Reference:
http://pages.cpsc.ucalgary.ca/~robin/class/411/M+/Mspec.pdf
http://www2.cs.tum.edu/projekte/cup/examples.php
http://stackoverflow.com/questions/4650366/create-abstract-tree-problem-from-parser

-----------------------------------------------------------------------------

Sample Output:

[xlin@localhost A4]$ 
[xlin@localhost A4]$ 
[xlin@localhost A4]$ ./run_parser.sh tests/test1.m+ 
Parsing [tests/test1.m+]

AST: 
M_prog (
	M_block[M_var("x", [], M_bool)]
	,[M_read ("x")M_ass ("x",M_app (M_add,M_app (M_id ("x",),1))M_app (M_id ("x",)])

Checking Semantics ...
SymbolException: Symbol Error: ADDOP cannot be used for M_app (M_add,M_app (M_id ("x",),1)M_app (M_addM_addM_add,M_app (M_id ("x",)M_app (M_id ("x",)M_app (M_id ("x",)M_app (M_id ("x",),111)
	at SymbolChecker.check_M_expr(SymbolChecker.java:241)
	at SymbolChecker.check_M_expr(SymbolChecker.java:396)
	at SymbolChecker.check_M_expr(SymbolChecker.java:396)
	at SymbolChecker.check_M_expr(SymbolChecker.java:396)
	at SymbolChecker.check_M_stmt(SymbolChecker.java:437)
	at SymbolChecker.check_M_stmt(SymbolChecker.java:418)
	at SymbolChecker.check_M_stmt(SymbolChecker.java:422)
	at SymbolChecker.check_M_stmt(SymbolChecker.java:413)
	at SymbolChecker.checkSyntax(SymbolChecker.java:65)
	at parser.main(parser.java:388)
Semantics are not good
[xlin@localhost A4]$ 
[xlin@localhost A4]$ ./run_parser.sh tests/test2.m+ 
Parsing [tests/test2.m+]

AST: 
M_prog (
	M_block[M_var("x", [], M_int)M_var("y", [], M_int)M_var("a", [], M_bool)
		M_fun("f", ["a"M_int"b"M_int],M_bool,[]
			,[M_app (M_gt,M_app (M_id ("a",),M_app (M_id ("b",))])]
	,[M_read ("x")M_read ("y")M_ass ("a",M_app (M_id ("f",M_app (M_id ("y",)M_app (M_id ("x",)))M_app (M_id ("a",)])

Checking Semantics ...
Intermediate Representation: 
IPROG (
[IFUN 
	("FUN1"
	,[]
	,0
	,2
	,[]
	,
	,IRETURN( IAPP(IGT,[ IID(0,-4,[])],[ IID(0,-5,[])]))
	)
]
,3
,[]
,IREAD_I(0,1, [])
,IREAD_I(0,2, [])
,IASS(0,3,[], IAPP(ICALL ("FUN1",0), IID(0,2,[]) IID(0,1,[])))
,IPRINT_B( IID(0,3,[]))
,)

Semantics are good
[xlin@localhost A4]$ 
[xlin@localhost A4]$ ./run_parser.sh tests/test3.m+ 
Parsing [tests/test3.m+]

AST: 
M_prog (
	M_block[M_var("x", [], M_bool)
		M_fun("f", ["a"M_bool"b"M_bool],M_bool,[]
			,[true])]
	,[M_ass ("x",M_app (M_id ("f",M_app (M_id ("x",)M_app (M_id ("x",)))M_app (M_id ("x",)])

Checking Semantics ...
Intermediate Representation: 
IPROG (
[IFUN 
	("FUN1"
	,[]
	,0
	,2
	,[]
	,
	,IRETURN(IBOOL true)
	)
]
,1
,[]
,IASS(0,1,[], IAPP(ICALL ("FUN1",0), IID(0,1,[]) IID(0,1,[])))
,IPRINT_B( IID(0,1,[]))
,)

Semantics are good
[xlin@localhost A4]$ 
[xlin@localhost A4]$ ./run_parser.sh tests/test4.m+ 
Parsing [tests/test4.m+]

AST: 
M_prog (
	M_block[M_var("x", [], M_int)M_var("y", [], M_int)
		M_fun("f", ["a"M_int"b"M_int],M_int,[]
			,[M_app (M_neg 1)])]
	,[M_ass ("f",M_app (M_id ("f",M_app (M_id ("y",)M_app (M_id ("x",)))M_app (M_id ("x",)])

Checking Semantics ...
SymbolException: Symbol Error: "f" is not var
	at SymbolChecker.check_M_stmt(SymbolChecker.java:432)
	at SymbolChecker.check_M_stmt(SymbolChecker.java:418)
	at SymbolChecker.check_M_stmt(SymbolChecker.java:413)
	at SymbolChecker.checkSyntax(SymbolChecker.java:65)
	at parser.main(parser.java:388)
Semantics are not good
[xlin@localhost A4]$ 
