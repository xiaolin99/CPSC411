CPSC 411 - Assignment 2
by 
Xiao Lin
00288263

-----------------------------------------------------------

TRANSFORMED GRAMMAR:
prog -> stmt.
stmt -> IF expr THEN stmt ELSE stmt
      | WHILE expr DO stmt
      | INPUT ID
      | ID ASSIGN expr
      | WRITE expr
      | BEGIN stmtlist END.
stmtlist -> stmtlistP
stmtlistP -> stmt SEMICOLON stmtlistP
           |.
(I don't want to expand the leading stmt here because it would complicate the program)
expr -> term exprP
exprP -> ADD term exprP
	   | SUB term exprP
       | .
term -> factor termP
termP -> MUL factor termP
	   | DIV factor termP
       | .
factor -> LPAR expr RPAR
        | ID
        | NUM
        | SUB NUM.
        
-----------------------------------------------------------

FILES INCLUDED:
mm_lexor.java - the lexor that will tokenize a m- program
RDP.java - the recursive descent parser
5 .m- files - the 5 test m- program
3 .sc files - 3 stack code file generated by the parser 

-----------------------------------------------------------

TO COMPILE:
* make sure jdk is installed
* change directory to A2, then run

javac *java

-----------------------------------------------------------

TO RUN THE PARSER:
* compile the program first, then run

java RDP $mPROGRAM

* $mPROGRAM is the filename of the m- program
* this program will first print out the token list, then indicate if parsing is successful or not
* if parsing is successful, program will print out the AST and the filename of the stack code

-----------------------------------------------------------

TO RUN THE STACK CODE:
* make sure csh is installed
* make sure you have executable permission of bashstack.sh, then run

./bashstack.sh $STACKCODE

* $STACKCODE is the file name of the stack code

-----------------------------------------------------------

SAMPLE OUTPUT:

xlin@xlinVM:~/CPSC411/A2$ javac *java
xlin@xlinVM:~/CPSC411/A2$ java RDP test1.m-
Token List:
BEGIN ID("y")  ASSIGN NUM("20") SEMICOLON ID("z")  ASSIGN NUM("10") SEMICOLON ID("x")  ASSIGN NUM("10") DIV NUM("2") ADD ID("y")  MUL LPAR ID("z")  SUB NUM("5") RPAR MUL SUB NUM("1") SUB NUM("5") SEMICOLON WRITE ID("x")  SEMICOLON END 
Parsing Success!!!
AST:
 Block [ Block [ Assign ID_y (( 20 ))] Block [ Assign ID_z (( 10 ))] Block [ Assign ID_x (DIV ADD ( 10  2 )MUL ( ID_y ((SUB ( ID_z )MUL SUB ( 5 ))) -1 )( 5 ))] Block [ Print (( ID_x ))]]
Stack Code:
test1.m-.sc
xlin@xlinVM:~/CPSC411/A2$ ./bashstack.sh test1.m-.sc 
-100
xlin@xlinVM:~/CPSC411/A2$ 
xlin@xlinVM:~/CPSC411/A2$ java RDP test2.m-
Token List:
BEGIN INPUT ID("x")  SEMICOLON IF ID("x")  SUB NUM("1") THEN IF ID("x")  SUB NUM("2") THEN ID("z")  ASSIGN NUM("0") ELSE ID("z")  ASSIGN NUM("2") ELSE ID("z")  ASSIGN NUM("1") SEMICOLON WRITE ID("z")  SEMICOLON END 
Parsing Success!!!
AST:
 Block [ Block [ Input ID_x] Block [ If (SUB ( ID_x )( 1 )) Block [ If (SUB ( ID_x )( 2 )) Block [ Assign ID_z (( 0 ))] Block [ Assign ID_z (( 2 ))]] Block [ Assign ID_z (( 1 ))]] Block [ Print (( ID_z ))]]
Stack Code:
test2.m-.sc
xlin@xlinVM:~/CPSC411/A2$ ./bashstack.sh test2.m-.sc 
7
0
xlin@xlinVM:~/CPSC411/A2$ 
xlin@xlinVM:~/CPSC411/A2$ 
xlin@xlinVM:~/CPSC411/A2$ java RDP test3.m-
Token List:
BEGIN INPUT ID("x")  SEMICOLON WHILE ID("x")  DO BEGIN IF LPAR ID("x")  ADD NUM("1") RPAR DIV NUM("2") SUB ID("x")  DIV NUM("2") THEN WRITE ID("x")  ELSE ID("z")  ASSIGN NUM("0") SEMICOLON ID("x")  ASSIGN ID("x")  SUB NUM("1") SEMICOLON END SEMICOLON END 
Parsing Success!!!
AST:
 Block [ Block [ Input ID_x] Block [ while (( ID_x )) Block [ Block [ If ((((ADD ( ID_x )DIV SUB ( 1 ))) 2 )DIV ( ID_x  2 )) Block [ Print (( ID_x ))] Block [ Assign ID_z (( 0 ))]] Block [ Assign ID_x (SUB ( ID_x )( 1 ))]]]]
Stack Code:
test3.m-.sc
xlin@xlinVM:~/CPSC411/A2$ ./bashstack.sh test3.m-.sc 
6
5
3
1
xlin@xlinVM:~/CPSC411/A2$ 
xlin@xlinVM:~/CPSC411/A2$ 
xlin@xlinVM:~/CPSC411/A2$ java RDP test4.m-
Token List:
BEGIN ID("x")  ASSIGN NUM("1") SEMICOLON ID("y")  ASSIGN NUM("2") SEMICOLON ID("z")  ASSIGN ID("x")  ADD ID("y")  MUL LPAR NUM("3") SUB LPAR ID("x")  SUB NUM("3") RPAR RPAR SUB NUM("2") RPAR SEMICOLON END 
Error: expected SEMICOLON, got RPAR
xlin@xlinVM:~/CPSC411/A2$ 
xlin@xlinVM:~/CPSC411/A2$ 
xlin@xlinVM:~/CPSC411/A2$ java RDP test5.m-
Token List:

ERROR: Token list empty! Nothin to parse.
xlin@xlinVM:~/CPSC411/A2$ 




